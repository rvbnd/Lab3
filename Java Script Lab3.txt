var map;
var elevator;
var myOptions = {
    zoom: 7,
    mapTypeId: 'terrain'
};
map = new google.maps.Map($('#map')[0], myOptions);
var markers = [];

 // Try HTML5 geolocation
  if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = new google.maps.LatLng(position.coords.latitude,
                                       position.coords.longitude);

      var infowindow = new google.maps.InfoWindow({
        map: map,
        position: pos,
        content: 'Location found using HTML5.'
      });

      map.setCenter(pos);
    }, function() {
      handleNoGeolocation(true);
    });
  } else {
    // Browser doesn't support Geolocation
    handleNoGeolocation(false);
  }

///////  Direction ///////////////////
var directionDisplay;
var directionsService = new google.maps.DirectionsService();     //Create a DirectionsService object which is required to communicate with the Google Maps API Direction Service
var map2;
function initialize()
{
            directionsDisplay = new google.maps.DirectionsRenderer();        //Create a DirectionsRenderer object to render the directions results
    var center = new google.maps.LatLng(0, 0);    //Map is centered at 0,0
    var myOptions =
    {
            zoom:7,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            center: center
    }
    map2 = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
    directionsDisplay.setMap(map2);
    var start = "kansas city Downtown";     //Set the source/ origin
    var end = "Umkc";  //Set the destination
    var request =
    {
            origin:start,
            destination:end,
            travelMode: google.maps.DirectionsTravelMode.DRIVING          //Current travel mode is DRIVING. You can change to BICYCLING or WALKING and see the changes.
    };
    directionsService.route(request, function(response, status)
    {
            if (status == google.maps.DirectionsStatus.OK) //Check if request is successful.
            {
            directionsDisplay.setDirections(response);         //Display the directions result
            }
    });
}

var button = document.getElementById('button');

var onClick = function() {
    initialize();
};

button.addEventListener('click', onClick, false);

///Local Storage///
var stores = Array();
//input field text
var inputField = document.getElementById('inputString');

var returnMsg;

//clear the storage
function clearStorage() {
    //clear the storage
    stores = Array();
    localStorage.clear("database");
    //visually cleared
    document.getElementById('write').innerHTML = "storage cleared.";
}

// save the string
function saveStatusLocally() {
    //grab the value of the text box
    var stringToSave = document.getElementById("inputString").value;
    if ((stringToSave == null) || (stringToSave == "")) {
        document.getElementById('write').innerHTML = "nothing to store.";
    } else {
        //push that value to the array
        stores.push(stringToSave);
        //clear the input field for visual 
        //inputField.value = "";
        //print that value into the local storage named database and joing by a non-breaking space
        window.localStorage.setItem("database", stores.join(" "));
        //confirm write
        document.getElementById('write').innerHTML = "data stored.";
        //clear message after 1s
        setTimeout(function() {
            document.getElementById('write').innerHTML = "";
        }, 1000);

    }
}

// read the string
function readStatus() {
    //print the value of the local storage "database" key
    if (window.localStorage.getItem("database") == null) {
        document.getElementById('write').innerHTML = "nothing stored.";
    } else {
        document.getElementById('write').innerHTML = window.localStorage.getItem("database");
    }
}

//clear the storage
function clearStorage2() {
    //clear the storage
    stores = Array();
    localStorage.clear("database");
    //visually cleared
    document.getElementById('write2').innerHTML = "storage cleared.";
}

// read the string
function readStatus2() {
    //print the value of the local storage "database" key
    if (window.localStorage.getItem("database") == null) {
        document.getElementById('write').innerHTML = "nothing stored.";
    } else {
        document.getElementById('write2').innerHTML = window.localStorage.getItem("database");
    }
}

 $.ajax({
       type: 'GET',
        url: 'http://api.wunderground.com/api/36b799dc821d5836/conditions/q/MO/Kansas City.json',
        async: false,
        contentType: "application/json",
        dataType: 'jsonp'
       
    }).then(function(data) {
     
     $.each(data, function(idx, obj) {
	 returnMsg = " Kansas City degree is " +obj.temp_f + " weather is " + obj.weather;
});
    });
///////  Weather ///////////////////
document.getElementById("showweather").onclick = function () 
{
  var d = new Date();
  var temp="";
    var loc="";
  $.simpleWeather({
    zipcode: '64110',
    woeid: '',
    location: '',
    unit: 'f',
    success: function(weather) {
      temp=weather.temp+'&deg;'+weather.units.temp;
        loc=weather.city;
        var _href = $("a.tweet-link").attr("href");
$("a.tweet-link").attr("href", _href + '&text=Todays weather in'+loc+' is '+temp);
      html = '<h2>'+weather.temp+'&deg;'+weather.units.temp+'</h2>';
	  html += '<ul><li>'+weather.city+', '+weather.region+'</li>';
      html += '<li class="currently">'+weather.currently+'</li>';
	  html += '<br/>';
      $("#Jweather").html(html);
    },
    error: function(error) {
      $("#Jweather").html('<p>'+error+'</p>');
    }
  });
};


               